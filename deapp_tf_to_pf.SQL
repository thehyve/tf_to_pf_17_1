--------------------------------------------------------------------------
-- Play this script in DEAPP@EC2-54-93-196-236.EU-CENTRAL-1.COMPUTE.AMAZONAWS.COM:1522/ORCL to make it look like DEAPP@EC2-54-93-196-236.EU-CENTRAL-1.COMPUTE.AMAZONAWS.COM:1523/ORCL
--
-- Please review the script before using it to make sure it won't
-- cause any unacceptable data loss.
--
-- DEAPP@EC2-54-93-196-236.EU-CENTRAL-1.COMPUTE.AMAZONAWS.COM:1522/ORCL Schema Extracted by User SYSTEM 
-- DEAPP@EC2-54-93-196-236.EU-CENTRAL-1.COMPUTE.AMAZONAWS.COM:1523/ORCL Schema Extracted by User SYSTEM 


-- 4 new tabs, design reasons?
CREATE TABLE DEAPP.DE_TWO_REGION_EVENT
(
  TWO_REGION_EVENT_ID  NUMBER                   NOT NULL,
  CGA_TYPE             VARCHAR2(500 BYTE),
  SOAP_CLASS           VARCHAR2(500 BYTE)
);

CREATE UNIQUE INDEX DEAPP.TWO_REGION_EVENT_ID ON DEAPP.DE_TWO_REGION_EVENT
(TWO_REGION_EVENT_ID);

ALTER TABLE DEAPP.DE_TWO_REGION_EVENT
 ADD CONSTRAINT TWO_REGION_EVENT_ID
  PRIMARY KEY
  (TWO_REGION_EVENT_ID)
  USING INDEX DEAPP.TWO_REGION_EVENT_ID;


CREATE TABLE DEAPP.DE_TWO_REGION_JUNCTION_EVENT
(
  TWO_REGION_JUNCTION_EVENT_ID  NUMBER          NOT NULL,
  JUNCTION_ID                   NUMBER,
  EVENT_ID                      NUMBER,
  READS_SPAN                    INTEGER,
  READS_JUNCTION                INTEGER,
  PAIRS_SPAN                    INTEGER,
  PAIRS_JUNCTION                INTEGER,
  PAIRS_END                     INTEGER,
  READS_COUNTER                 INTEGER,
  BASE_FREQ                     FLOAT(126)
);

CREATE UNIQUE INDEX DEAPP.TWO_REGION_JUNCTION_EVENT_ID ON DEAPP.DE_TWO_REGION_JUNCTION_EVENT
(TWO_REGION_JUNCTION_EVENT_ID);

ALTER TABLE DEAPP.DE_TWO_REGION_JUNCTION_EVENT
 ADD CONSTRAINT TWO_REGION_JUNCTION_EVENT_ID
  PRIMARY KEY
  (TWO_REGION_JUNCTION_EVENT_ID)
  USING INDEX DEAPP.TWO_REGION_JUNCTION_EVENT_ID;

CREATE TABLE DEAPP.DE_TWO_REGION_JUNCTION
(
  TWO_REGION_JUNCTION_ID  NUMBER                NOT NULL,
  UP_END                  NUMBER(9)             NOT NULL,
  UP_CHR                  VARCHAR2(50 BYTE)     NOT NULL,
  UP_POS                  NUMBER(9)             NOT NULL,
  UP_STRAND               CHAR(1 BYTE),
  DOWN_END                NUMBER(9)             NOT NULL,
  DOWN_CHR                VARCHAR2(50 BYTE)     NOT NULL,
  DOWN_POS                NUMBER(9)             NOT NULL,
  DOWN_STRAND             CHAR(1 BYTE),
  IS_IN_FRAME             NUMBER(9),
  EXTERNAL_ID             NUMBER(9),
  ASSAY_ID                NUMBER(9)
);

CREATE UNIQUE INDEX DEAPP.TWO_REGION_JUNCTION_ID ON DEAPP.DE_TWO_REGION_JUNCTION
(TWO_REGION_JUNCTION_ID);

CREATE INDEX DEAPP.TR_JUNCTION_ASSAY ON DEAPP.DE_TWO_REGION_JUNCTION
(ASSAY_ID);

CREATE INDEX DEAPP.TR_JUNCTION_UP_CHR ON DEAPP.DE_TWO_REGION_JUNCTION
(UP_CHR, UP_POS);

CREATE INDEX DEAPP.TR_JUNCTION_DOWN_CHR ON DEAPP.DE_TWO_REGION_JUNCTION
(DOWN_CHR, DOWN_POS);

ALTER TABLE DEAPP.DE_TWO_REGION_JUNCTION
 ADD CONSTRAINT TWO_REGION_JUNCTION_ID
  PRIMARY KEY
  (TWO_REGION_JUNCTION_ID)
  USING INDEX DEAPP.TWO_REGION_JUNCTION_ID;

CREATE TABLE DEAPP.DE_TWO_REGION_EVENT_GENE
(
  TWO_REGION_EVENT_GENE_ID  NUMBER              NOT NULL,
  GENE_ID                   VARCHAR2(50 BYTE)   NOT NULL,
  EVENT_ID                  NUMBER(9)           NOT NULL,
  EFFECT                    VARCHAR2(500 BYTE)
);

CREATE UNIQUE INDEX DEAPP.TWO_REGION_EVENT_GENE_ID ON DEAPP.DE_TWO_REGION_EVENT_GENE
(TWO_REGION_EVENT_GENE_ID);

CREATE INDEX DEAPP.TR_EVENT_GENE_GENE_ID ON DEAPP.DE_TWO_REGION_EVENT_GENE
(GENE_ID);

ALTER TABLE DEAPP.DE_TWO_REGION_EVENT_GENE
 ADD CONSTRAINT TWO_REGION_EVENT_GENE_ID
  PRIMARY KEY
  (TWO_REGION_EVENT_GENE_ID)
  USING INDEX DEAPP.TWO_REGION_EVENT_GENE_ID;

ALTER TABLE DEAPP.DE_TWO_REGION_EVENT_GENE
 ADD CONSTRAINT TWO_REGION_EVENT_GENE_FK 
  FOREIGN KEY (EVENT_ID) 
  REFERENCES DEAPP.DE_TWO_REGION_EVENT (TWO_REGION_EVENT_ID);



CREATE SEQUENCE DEAPP.DE_TWO_REGION_EVENT_GENE_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER "DEAPP"."TRG_TWO_REGION_EVENT_GENE_ID"
before insert on "DEAPP"."DE_TWO_REGION_EVENT_GENE"
for each row begin
        if inserting then
                if :NEW."TWO_REGION_EVENT_GENE_ID" is null then
                        select DE_TWO_REGION_EVENT_GENE_SEQ.nextval into :NEW."TWO_REGION_EVENT_GENE_ID" from dual;
                end if;
        end if;
end;
/
ALTER TRIGGER "DEAPP"."TRG_TWO_REGION_EVENT_GENE_ID" ENABLE;

CREATE SEQUENCE DEAPP.DE_TWO_REGION_EVENT_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER "DEAPP"."TRG_TWO_REGION_EVENT_ID"
before insert on "DEAPP"."DE_TWO_REGION_EVENT"
for each row begin
        if inserting then
                if :NEW."TWO_REGION_EVENT_ID" is null then
                        select DE_TWO_REGION_EVENT_SEQ.nextval into :NEW."TWO_REGION_EVENT_ID" from dual;
                end if;
        end if;
end;
/
ALTER TRIGGER "DEAPP"."TRG_TWO_REGION_EVENT_ID" ENABLE;

CREATE SEQUENCE DEAPP.DE_TWO_REGION_JUNCTION_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER "DEAPP"."TRG_DE_TWO_REGION_JUNCTION"
before insert on "DEAPP"."DE_TWO_REGION_JUNCTION"
for each row begin
        if inserting then
                if :NEW."TWO_REGION_JUNCTION_ID" is null then
                        select DE_TWO_REGION_JUNCTION_SEQ.nextval into :NEW."TWO_REGION_JUNCTION_ID" from dual;
                end if;
        end if;
end;
/
ALTER TRIGGER "DEAPP"."TRG_DE_TWO_REGION_JUNCTION" ENABLE;

CREATE SEQUENCE DEAPP.DE_TWO_RGN_JUNCTION_EVENT_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER "DEAPP"."TRG_TWO_RGN_JUNCTION_EVENT_ID"
before insert on "DEAPP"."DE_TWO_REGION_JUNCTION_EVENT"
for each row begin
        if inserting then
                if :NEW."TWO_REGION_JUNCTION_EVENT_ID" is null then
                        select DE_TWO_RGN_JUNCTION_EVENT_SEQ.nextval into :NEW."TWO_REGION_JUNCTION_EVENT_ID" from dual;
                end if;
        end if;
end;
/
ALTER TRIGGER "DEAPP"."TRG_TWO_RGN_JUNCTION_EVENT_ID" ENABLE;



-- any FK ref ? new info, add
-- gene platform info, for variant data
ALTER TABLE DEAPP.DE_GPL_INFO
 ADD (GENE_ANNOTATION_ID  VARCHAR2(50 BYTE));


-- ? how's it used, a small tb, used in old etl tool. no need
ALTER TABLE DEAPP.DE_SUBJECT_SAMPLE_MAPPING
 ADD (PARTITION_ID  NUMBER(18));


-- add
ALTER TABLE DEAPP.DE_PROTEIN_ANNOTATION
 ADD (CHROMOSOME  VARCHAR2(5 CHAR));

ALTER TABLE DEAPP.DE_PROTEIN_ANNOTATION
 ADD (START_BP  NUMBER);

ALTER TABLE DEAPP.DE_PROTEIN_ANNOTATION
 ADD (END_BP  NUMBER);



-- ?  ~300mill rows, 9.5GB, list part by trial_source
-- used in old etl tool. no need, double check
ALTER TABLE DEAPP.DE_SUBJECT_MICROARRAY_DATA
 ADD (PARTITION_ID  NUMBER(18));


-- obsolate
ALTER TABLE DEAPP.DE_SUBJECT_PROTEIN_DATA
 ADD (TIMEPOINT  VARCHAR2(100 BYTE));



-- just a subtype of number, with precision, why more float?
-- add as number
ALTER TABLE DEAPP.DE_SUBJECT_ACGH_DATA
 ADD (PROBHOMLOSS  FLOAT(126));


ALTER TABLE DEAPP.DE_SUBJECT_RNASEQ_DATA
 ADD (NORMALIZED_READCOUNT  FLOAT(126));

ALTER TABLE DEAPP.DE_SUBJECT_RNASEQ_DATA
 ADD (LOG_NORMALIZED_READCOUNT  FLOAT(126));

ALTER TABLE DEAPP.DE_SUBJECT_RNASEQ_DATA
 ADD (ZSCORE  FLOAT(126));

ALTER TABLE DEAPP.DE_SUBJECT_RNASEQ_DATA
 ADD (PARTITION_ID  NUMBER);



-- we have it as non unique local index
-- it may introduce global index unusable issue, expensive index maintenance
-- recommended
CREATE UNIQUE INDEX DEAPP.DE_SUBJECT_MICROARRAY_DATA_PK ON DEAPP.DE_SUBJECT_MICROARRAY_DATA
(ASSAY_ID, PROBESET_ID);
ALTER TABLE DEAPP.DE_SUBJECT_MICROARRAY_DATA
 ADD CONSTRAINT DE_SUBJECT_MICROARRAY_DATA_PK
  PRIMARY KEY
  (ASSAY_ID, PROBESET_ID)
  USING INDEX DEAPP.DE_SUBJECT_MICROARRAY_DATA_PK;


-- no need, have it at leading, may retire, we have multiple "snp info" tabs
CREATE INDEX DEAPP.U_SNP_CHROM ON DEAPP.DE_SNP_INFO
(CHROM);


CREATE INDEX DEAPP.GEN_VARIANT_SUBJ_SUMM_CHR_POS ON DEAPP.DE_VARIANT_SUBJECT_SUMMARY
(CHR, POS);

CREATE INDEX DEAPP.GEN_VARIANT_SUBJ_DET_CHR_POS ON DEAPP.DE_VARIANT_SUBJECT_DETAIL
(CHR, POS);


ALTER TABLE DEAPP.DE_SUBJECT_MIRNA_DATA
 ADD PRIMARY KEY
  (ASSAY_ID, PROBESET_ID);


ALTER TABLE DEAPP.DE_QPCR_MIRNA_ANNOTATION
 ADD PRIMARY KEY
  (PROBESET_ID);




-- pf dropped
ALTER TABLE DEAPP.DE_SNP_DATA_BY_PROBE
 ADD (PROBE_ID  NUMBER(22));

-- pf dropped
ALTER TABLE DEAPP.DE_SNP_DATA_BY_PROBE
 ADD (SNP_ID  NUMBER(22));

-- pf dropped, replaced _by_probe_blob
ALTER TABLE DEAPP.DE_SNP_DATA_BY_PROBE
 ADD (DATA_BY_PROBE  CLOB);

-- pf dropped, ref platform_probe_id
ALTER TABLE DEAPP.DE_SNP_DATA_BY_PROBE
 ADD CONSTRAINT FK_SNP_BY_PROBE_PROBE_ID 
  FOREIGN KEY (PROBE_ID) 
  REFERENCES DEAPP.DE_SNP_PROBE (SNP_PROBE_ID);

-- pf dropped, ref genotype_probe_anno
ALTER TABLE DEAPP.DE_SNP_DATA_BY_PROBE
 ADD CONSTRAINT FK_SNP_BY_PROBE_SNP_ID 
  FOREIGN KEY (SNP_ID) 
  REFERENCES DEAPP.DE_SNP_INFO (SNP_INFO_ID);
